1. PetService.registerNewPet()
Мета: Реєструє нового домашнього улюбленця, пропонуючи користувачу ввести деталі, такі як тип, вік, ім'я та стать.
Вхідні дані: Відсутні.
Вихідні дані: Повертає об'єкт Pet, який представляє зареєстрованого домашнього улюбленця.
2. PetService.buildDog()
Мета: Створює об'єкт Dog, який є конкретним типом домашнього улюбленця з додатковими властивостями, такими як розмір.
Вхідні дані: Відсутні.
Вихідні дані: Повертає об'єкт Dog.
3. PetService.petToDog(Pet pet)
Мета: Перетворює загальний об'єкт Pet у об'єкт Dog.
Вхідні дані: Об'єкт Pet.
Вихідні дані: Повертає об'єкт Dog.
4. PetService.buildPet(String type)
Мета: Створює загальний об'єкт Pet на основі вказаного типу.
Вхідні дані: Тип домашнього улюбленця (рядок).
Вихідні дані: Повертає об'єкт Pet.
5. ClientService.registerNewClient()
Мета: Реєструє нового клієнта, пропонуючи користувачу ввести деталі, такі як електронна пошта, ім'я та прізвище.
Вхідні дані: Відсутні.
Вихідні дані: Повертає об'єкт Client, який представляє зареєстрованого клієнта.
6. ClientService.registerPetForClient(Client client)
Мета: Реєструє домашнього улюбленця для заданого клієнта, пропонуючи користувачу ввести деталі улюбленця.
Вхідні дані: Об'єкт Client.
Вихідні дані: Відсутні.
7. ClientRepository.findClientByEmail(String email)
Мета: Знаходить клієнта в репозиторії за заданою електронною адресою.
Вхідні дані: Електронна адреса клієнта (рядок).
Вихідні дані: Повертає об'єкт Client, якщо знайдено; в іншому випадку повертає null.
8. PetRepository.addPet(Pet pet)
Мета: Додає улюбленця до репозиторію.
Вхідні дані: Об'єкт Pet.
Вихідні дані: Відсутні.
9. InputReader.readEmail()
Мета: Зчитує та перевіряє користувацький ввід для електронної адреси.
Вхідні дані: Відсутні.
Вихідні дані: Повертає дійсну електронну адресу (рядок).
10. InputReader.read(String prompt, String invalidMessage, Validator validator)
Мета: Зчитує та перевіряє користувацький ввід на основі наданої реалізації Validator.
Вхідні дані: Повідомлення, повідомлення про невірний ввід та екземпляр Validator.
Вихідні дані: Повертає дійсний ввід (рядок).
11. Validator.isValid(String value) (Інтерфейс)
Мета: Визначає умови для перевірки введення.
Вхідні дані: Значення (рядок).
Вихідні дані: Повертає true, якщо значення дійсне; в іншому випадку повертає false.
12. Valid.isEmailValid(String email)
Мета: Перевіряє, чи електронна адреса вказана в правильному форматі.
Вхідні дані: Електронна адреса (рядок).
Вихідні дані: Повертає true, якщо електронна адреса дійсна; в іншому випадку повертає false.
13. Valid.isFirstNamelValid(String firstName)
Мета: Перевіряє, чи ім'я вказане в правильному форматі.
Вхідні дані: Ім'я (рядок).
Вихідні дані: Повертає true, якщо ім'я дійсне; в іншому випадку повертає false.
14. Valid.isLastNamelValid(String lastName)
Мета: Перевіряє, чи прізвище вказане в правильному форматі.
Вхідні дані: Прізвище (рядок).
Вихідні дані: Повертає true, якщо прізвище дійсне; в іншому випадку повертає false.
15. Authenticator.auth()
Мета: Здійснює аутентифікацію користувача, перевіряючи введений пароль.
Вхідні дані: Відсутні.
Вихідні дані: Повертає true, якщо аутентифікація успішна; в іншому випадку повертає false.
16. ApplicationRunner.run()
Мета: Організовує загальний хід програми, включаючи аутентифікацію клієнта, реєстрацію та реєстрацію домашнього улюбленця.
Вхідні дані: Відсутні.
Вихідні дані: Відсутні.
17. Main.main(String[] args)
Мета: Точка входу в програму.
Вхідні дані: Аргументи командного рядка (не використовуються).
Вихідні дані: Відсутні.